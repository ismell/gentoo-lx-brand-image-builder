#!/usr/bin/env bash
#
# Install Gentoo Linux into a directory, modify the installation, then tar it up.
#

#
# Copyright 2020 Joyent Inc.
#

if [[ -n $TRACE ]]; then
	export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
	set -o xtrace
fi

set -euo pipefail

GUESTTOOLS=guesttools
BUILD_DATE=$(date +%Y%m%d)

export PATH=$PATH:/sbin:/bin

fatal() {
	echo "$@" >&2
	exit 1
}

usage() {
	cat <<-EOF

	Install and modify Gentoo in a given directory in a given directory using a given mirror

	Usage:
	  $0 -f <flavor> -d <dir> -m <mirror> -i <img> -p <name> -D <desc> -u <url>

	Example:
	  $0 -f amd64-hardened+nomultilib -d /data/gentoo -i gentoo -p "Gentoo Linux" -D "Gentoo 64-bit lx-brand image." -u https://docs.joyent.com/images/container-native-linux
	OPTIONS:
	  -f <flavor>   Stage 3 flavor: amd64, amd64-hardened+nomultilib,amd64-hardened, amd64-musl-hardened, amd64-musl-vanilla, amd64-nomultilib, amd64-systemd, amd64-uclibc-hardened, amd64-uclibc-vanilla  
	  -D <desc>     A description for the image. This is used in the image manifest and the /etc/product file.
	  -d <dir>      A path to the install directory
	  -h            Show this message and exit
	  -i <img>      The name of the image. This is used for naming the tarball.
	  -m <mirro>    A URL for the desired archive mirror
	  -p <name>     The proper name of the image. Use quotes. This is used in the MOTD and /etc/product file.
	  -u <url>      A URL to the image docs [optional]

	EOF
}

FLAVOR=
INSTALL_DIR=
MIRROR="https://bouncer.gentoo.org"
IMAGE_NAME=
NAME=
DESC=
DOCS=

while getopts 'hf:d:m:i:p:D:u:' OPTION
do
	case $OPTION in
		h)
			usage
			exit 0
			;;
		f)
			FLAVOR="$OPTARG"
			;;
		d)
			INSTALL_DIR=$OPTARG
			;;
		m)
			MIRROR=${OPTARG%/}
			;;
		i)
			IMAGE_NAME=$OPTARG
			;;
		p)
			NAME=$OPTARG
			;;
		D)
			DESC=$OPTARG
			;;
		u)
			DOCS=$OPTARG
			;;
		*)
			usage
			exit 1
			;;
	esac
done


[[ -n $FLAVOR ]]      || fatal 'Error: missing flavor (-f) value amd64, amd64-nomultilib, amd64-hardened, amd64-hardened+nomultilib'
[[ -n $INSTALL_DIR ]] || fatal 'Error: missing install directory (-d) value'
[[ -n $MIRROR ]]      || fatal 'Error: missing mirror (-m) url value'
[[ -n $IMAGE_NAME ]]  || fatal 'Error: missing image name (-i) value'
[[ -n $NAME ]]        || fatal 'Error: missing proper name (-p) value'
[[ -n $DOCS ]]        || DOCS='https://docs.joyent.com/images/container-native-linux'

TARGET=$PWD/$IMAGE_NAME-$BUILD_DATE.tar.gz

# make absolute dir
if [[ ${INSTALL_DIR:0:1} != '/' ]]; then
	INSTALL_DIR=$PWD/$INSTALL_DIR
fi

INSTALL_DIR="$(realpath "$INSTALL_DIR")"

echo "==> Installing Gentoo into $INSTALL_DIR"

if [[ -d $INSTALL_DIR ]]; then
	echo "====> Found previous chroot. Deleting and creating a new one."

	for dir in proc sys dev; do
		fulldir=$INSTALL_DIR/$dir
		if mount | grep -q "$fulldir"; then
			umount -R "$fulldir"
		fi
	done

	rm -rf "$INSTALL_DIR"
fi
mkdir -p "$INSTALL_DIR"

echo "===> Getting Gentoo ..."

if [[ ! -d tmp/ ]]; then
	echo "===> creating tmp/ directory"
	mkdir tmp
fi

cd tmp/

URL_BASE="${MIRROR}/fetch/root/all/releases/amd64/autobuilds"
LATEST_TXT="${URL_BASE}/latest-stage3-${FLAVOR}.txt"

wget -O latest.txt "$LATEST_TXT"

LATEST_TAR="$(sed -e '/^#/d' latest.txt | cut -d ' ' -f 1)"
LATEST_DIGEST_SIG="${LATEST_TAR}.DIGESTS.asc"
STAGE3_TAR="$(basename "${LATEST_TAR}")"
STAGE3_DIGEST_SIG="${STAGE3_TAR}.DIGESTS.asc"
STAGE3_DIGEST="${STAGE3_TAR}.DIGESTS"

wget -N "${URL_BASE}/${LATEST_TAR}"
wget -N "${URL_BASE}/${LATEST_TAR}.CONTENTS.gz"
wget -N "${URL_BASE}/${LATEST_DIGEST_SIG}"

echo "===> Verifying Gentoo base from $MIRROR"

# https://www.gentoo.org/downloads/signatures/
gpg --keyserver hkps://keys.gentoo.org --recv-keys 13EBBDBEDE7A12775DFDB1BABB572E0E2D182910

gpg --verify "${STAGE3_DIGEST_SIG}"

rm -f "${STAGE3_DIGEST}"
gpg --output "${STAGE3_DIGEST}" --decrypt "${STAGE3_DIGEST_SIG}"

grep -A 1 SHA512 --no-group-separator "${STAGE3_DIGEST}" > "${STAGE3_TAR}.sha512"

sha512sum -c "${STAGE3_TAR}.sha512"

echo "===> Installing Gentoo base from $MIRROR"

tar xpf "${STAGE3_TAR}" --xattrs-include='*.*' --numeric-owner -C "$INSTALL_DIR"

mount --types proc /proc "${INSTALL_DIR}/proc"
mount --rbind /sys "${INSTALL_DIR}/sys"
mount --make-rslave "${INSTALL_DIR}/sys"
mount --rbind /dev "${INSTALL_DIR}/dev"
mount --make-rslave "${INSTALL_DIR}/dev"

cp -fv ../setup.sh "${INSTALL_DIR}"
chmod +x "${INSTALL_DIR}/setup.sh"

chroot "$INSTALL_DIR" /setup.sh

umount "${INSTALL_DIR}/proc"
umount -R "${INSTALL_DIR}/sys"
umount -R "${INSTALL_DIR}/dev"

echo "==> Creating /etc/motd"
cat << MOTD > "$INSTALL_DIR/etc/motd"
   __        .                   .
 _|  |_      | .-. .  . .-. :--. |-
|_    _|     ;|   ||  |(.-' |  | |
  |__|   \`--'  \`-' \`;-| \`-' '  ' \`-'
                   /  ;  Instance ($NAME $BUILD_DATE)
                   \`-'   $DOCS

MOTD

echo "==> Creating /etc/product file"
cat << PRODUCT > "$INSTALL_DIR/etc/product"
Name: Joyent Instance
Image: $NAME $BUILD_DATE
Documentation: $DOCS
Description: $DESC
PRODUCT

cat "$INSTALL_DIR/etc/motd" "$INSTALL_DIR/etc/product" >  "$INSTALL_DIR/etc/gentoo-release"

echo "==> Installing Guest tools in $INSTALL_DIR"
echo "====> Running ./install.sh -i $INSTALL_DIR"
(
	cd "../$GUESTTOOLS"
	# TODO: Use portage to install this...
	# ./install.sh -i "$INSTALL_DIR"
)

echo "==> Saving installation as $TARGET. This may take a few minutes."
cd "$INSTALL_DIR"
tar czf "$TARGET" --exclude-from=../exclude.txt ./

echo "==> Installation complete!"
echo "==> $TARGET"

exit 0
